package competition_of_leecode;

/**
 * @author liupeidong
 * Created on 2019/10/6 13:44
 */
public class minCostToMoveChips_5213 {


    /*5213. 玩筹码 显示英文描述

        用户通过次数670
        用户尝试次数749
        通过次数681
        提交次数1186
        题目难度Easy

        数轴上放置了一些筹码，每个筹码的位置存在数组 chips 当中。

        你可以对 任何筹码 执行下面两种操作之一（不限操作次数，0 次也可以）：

        将第 i 个筹码向左或者右移动 2 个单位，代价为 0。
        将第 i 个筹码向左或者右移动 1 个单位，代价为 1。
        最开始的时候，同一位置上也可能放着两个或者更多的筹码。

        返回将所有筹码移动到同一位置（任意位置）上所需要的最小代价。



        示例 1：

        输入：chips = [1,2,3]
        输出：1
        解释：第二个筹码移动到位置三的代价是 1，第一个筹码移动到位置三的代价是 0，总代价为 1。
        示例 2：

        输入：chips = [2,2,2,3,3]
        输出：2
        解释：第四和第五个筹码移动到位置二的代价都是 1，所以最小总代价为 2。


        提示：

        1 <= chips.length <= 100
        1 <= chips[i] <= 10^9*/

    /*
    * 可以通过n次左右移动2个单位
    * 最终达到奇数位的筹码和偶数位的筹码都停留在两个位置并且相邻
    * 然后判断奇数的个数少还是偶数的个数少
    * */

    public int minCostToMoveChips(int[] chips) {
        int j = 0;
        int o = 0;

        for (int i = 0; i < chips.length; i++) {
            if (chips[i] % 2 == 0) {
                o++;
            } else {
                j++;
            }
        }

        return Math.min(j, o);
    }

}
